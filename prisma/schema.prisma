// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
  email   String   @unique
  name    String
  password String
  mobile  String?
  credits CreditAccount[]
  transactionsAsReceiver Transaction[] @relation("Receiver")
  transactionsAsSender Transaction[] @relation("Sender")
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model CreditAccount {
  id  String   @id @default(auto()) @map("_id") @db.ObjectId
  user User @relation(fields: [userId], references: [id])
  userId String @db.ObjectId
  amount Float @default(1000.00)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Transaction {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  receiver User @relation("Receiver", fields: [receiverId], references: [id])
  sender User @relation("Sender", fields: [senderId], references: [id])
  receiverId String @db.ObjectId
  senderId String @db.ObjectId
  createdAt DateTime  @default(now())
  amount Float
  tax Float
  updatedAt DateTime  @updatedAt
}

model Tax {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  value Float
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}